% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_zip.R
\name{extract_zip}
\alias{extract_zip}
\title{\code{extract_zip()}}
\usage{
extract_zip(
  address,
  if_multiple = "first",
  must_follow_state = TRUE,
  auto_NA = c("00000", "99999")
)
}
\arguments{
\item{address}{A vector containing one or more address strings from which to extract ZIP Codes. Character or character-coercible.}

\item{if_multiple}{If multiple candidate ZIP Codes are detected in a string, which should be returned, \code{'first'},
\code{'last'}, or \code{'all'}? Case-insensitive; \code{'first'} is default.}

\item{must_follow_state}{If \code{TRUE}, only extract five-digit ZIP Codes that follow (case-insensitive) US state names or abbreviations (including DC). \code{TRUE} is default.}

\item{auto_NA}{A vector containing ZIP Codes that should be converted to \code{NA} if extracted.
The common placeholders \code{'00000'} and \code{'99999'} are the default. Set to \code{NA} to convert no ZIPs to \code{NA}.}
}
\value{
A vector.
}
\description{
Extracts five-digit ZIP Codes from addresses.
}
\details{
\code{extract_zip()} extracts five-digit ZIP Codes from addresses in a vector.
ZIP Codes in the address vector can be either five-digit or nine-digit (hyphenated); only five-digit ZIP Codes will be returned.
If multiple candidate ZIP Codes are identified for a given address string, the \code{if_multiple} argument governs which is returned
(\code{'first'}, \code{'last'}, or \code{'all'}; \code{'first'} is default; if \code{'all'}, multiple candidate ZIPs for a given string are returned separated by \code{' | '}).
Specified ZIP Codes can be optionally converted to \code{NA} if extracted (by default, the common placeholders \code{'00000'} and \code{'99999'} are converted to \code{NA}).
By default, the function only identifies ZIP Codes that follow US state names or abbreviations (including DC).
}
\examples{
addresses <- c('NORFOLK, VA 23501',
               '100 MAIN ST, ALEXANDRIA, VA 22301-9999',
               '11111A 1ST ST, ROANOKE, VA 24001 & 22222B 2ND ST, ROANOKE, VA 24001',
               'RICHMOND, VA 00000', 'RICHMOND, VA 99999')
# Extract the last ZIP Code in each string:
extract_zip(addresses, if_multiple = 'last')
# Extract all ZIP Codes in each string:
extract_zip(addresses, if_multiple = 'all')
# With must_follow_state set to FALSE, 11111 and 22222 are
# errantly picked up in the last string:
extract_zip(addresses, if_multiple = 'all', must_follow_state = FALSE)
# With auto_NA set to NA, 00000 and 99999 are left as is:
extract_zip(addresses, if_multiple = 'last', auto_NA = NA)

}
